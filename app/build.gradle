plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'de.mannodermaus.android-junit5'
    id 'com.dicedmelon.gradle.jacoco-android'
    id 'com.google.firebase.firebase-perf'
}

android defaultAndroidConfig
android {
    namespace 'com.kevalpatel2106.pocketci'
    defaultConfig defaultAppConfig
    signingConfigs signingConfig

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            debuggable true
            zipAlignEnabled true
            ext.enableCrashlytics = false
            signingConfig signingConfigs.debug

            buildConfigField 'int', 'VERSION_CODE', "${playStoreVersion.versionCode}"
            buildConfigField 'String', 'VERSION_NAME', "\"${playStoreVersion.versionName}\""
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "${this.rootDir}/rules/proguard-rules.pro"

            debuggable false
            jniDebuggable false
            shrinkResources true
            renderscriptDebuggable false
            zipAlignEnabled true
            signingConfig signingConfigs.release

            buildConfigField 'int', 'VERSION_CODE', "${playStoreVersion.versionCode}"
            buildConfigField 'String', 'VERSION_NAME', "\"${playStoreVersion.versionName}\""
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
            proguardFiles "${this.rootDir}/rules/baseline-profile-rules.pro"

            buildConfigField 'int', 'VERSION_CODE', "${playStoreVersion.versionCode}"
            buildConfigField 'String', 'VERSION_NAME', "\"${playStoreVersion.versionName}\""
        }
    }
    tasks.withType(Test) {
        jacoco.includeNoLocationClasses = true
        jacoco.excludes = ['jdk.internal.*']
    }
}
apply from: "${this.rootDir}/gradle/screenshots.gradle"

dependencies {
    // feature modules
    implementation project(':feature:feature-registration')
    implementation project(':feature:feature-project')
    implementation project(':feature:feature-account')
    implementation project(':feature:feature-build')
    implementation project(':feature:feature-log')
    implementation project(':feature:feature-job')
    implementation project(':feature:feature-artifact')
    implementation project(':feature:feature-setting')
    implementation project(':feature:feature-drawer')
    implementation project(':feature:feature-splash')

    // Core modules
    implementation project(':entity')
    implementation project(':core:core')
    implementation project(':core:core-ui')
    implementation project(':core:core-network')
    implementation project(':core:core-resources')
    testImplementation project(':core:core-test')
    androidTestImplementation project(':core:core-test')

    // data modules
    implementation project(':repository:repository')
    implementation project(':repository:repository-impl')
    implementation project(':repository:repository-impl-analytics')

    // Other dependencies
    hilt()
    lifecycle()
    implementation libs.timber
    implementation libs.coroutines.android
    implementation libs.bundles.ktx
    implementation libs.bundles.paging
    implementation libs.bundles.navigtion
    debugImplementation libs.bundles.debugging
    implementation libs.androidx.startup
    implementation libs.profile.installer

    // Unit and UI tests
    androidTest()
    unitTest()
}
